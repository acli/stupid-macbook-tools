#!/usr/bin/perl
# vim:set sw=4 ai sm:

use strict;
use utf8;

sub read_string_from_file ($) {
    my($filename) = @_;
    my $it;
    if (open INPUT, '<', $filename) {
	$it = scalar <INPUT>;
	chomp $it;
	close INPUT;
    }
    return $it;
}

sub read_number_from_file ($) {
    my($filename) = @_;
    my $it = read_string_from_file $filename;
    $it += 0 if defined $it;
    return $it;
}

use vars qw($present $status $online $design_capacity $full $now $temp $voltage);
for (my $i = 0; $i < 2; $i += 1) { # On the Mac it's always BAT0, but on the Acer it's BAT1. I don't know why.
    $present = read_number_from_file "/sys/class/power_supply/BAT$i/present";
    $status = read_string_from_file "/sys/class/power_supply/BAT$i/status";
    $online = read_number_from_file "/sys/class/power_supply/BAT$i/present";
    $design_capacity = read_number_from_file "/sys/class/power_supply/BAT$i/charge_full_design";
    $full = read_number_from_file "/sys/class/power_supply/BAT$i/charge_full";
    $now = read_number_from_file "/sys/class/power_supply/BAT$i/charge_now";
    $temp = read_number_from_file "/sys/class/power_supply/BAT$i/temp";
    $voltage = read_number_from_file "/sys/class/power_supply/BAT$i/voltage_now";
last if defined $present;
}

binmode STDOUT, ':utf8';
if ($present) {
    printf "%.1f%%", 100*$now/$full;
    printf " (%.1f%% design capacity)", 100*$now/$design_capacity if defined $design_capacity && $design_capacity != $full;
    printf ", %s", $status if defined $status;
    printf ", input %.1f V", $voltage/100000 if defined $voltage;
    printf ", temp %.1fÂ°C", $temp/10 if defined $temp;
    printf "\n";
} else {
    print "Battery not present\n";
    exit(1);
}
