uname="`uname`"
arch="`uname -m`"
lang=en-US
rootdir=/usr/local/firefox
bindir="$rootdir/nightly"
tmpdir="$bindir.$$"
policies_subdir="distribution"
policies="$policies_subdir/policies.json"
dir="$rootdir"
test -d "$bindir" && dir="$bindir"
lastvers=/var/log/update-nightly.dat
os=
quiet=
wgetflags=
case "`tty`" in
"not a tty")
	wgetflags=-nv
	quiet=true
esac
if [ Linux = "$uname" -a x86_64 = "$arch" ]; then
	os=linux64
fi
rm -fr "$tmpdir"
test -z "$quiet" && printf 'Probing Nightly...' >&2
target="`(wget --debug -q -O /dev/null --max-redirect 0 "https://download.mozilla.org/?product=firefox-nightly-latest-ssl&os=$os&lang=$lang" 2>&1) |grep ^Location:|awk '{print $2}'|tr -d '\r'`"
case "$target" in
*.tar.bz2)
	tarflags=xjf
	;;
*.tar.gz)
	tarflags=xzf
	;;
*)
	echo "$target: Unknown file extension" >&2
	exit 1
esac
file="`basename "$target"`"
test -z "$quiet" && printf '%s ' " $file" >&2
size="`(wget --method=HEAD --debug -q -O /dev/null --max-redirect 0 "$target" 2>&1) |grep ^Content-Length:|awk '{print $2}'|tr -d '\r'`"
if [ -f "$lastvers" ]; then
	oldfile="`head -1 "$lastvers"`"
	oldsize="`sed '1d' "$lastvers"`"
else
	oldfile=
	oldsize=
fi
test -z "$quiet" && printf ' (size %s).\n' "$size" >&2
if [ "$file" = "$oldfile" -a "$size" = "$oldsize" ]; then
	test -n "$quiet" || echo "Nightly update \"$file\" already the current version" >&2
	exit 2
fi
mkdir "$tmpdir" || exit $?
cd "$tmpdir"
test -z "$quiet" && printf 'Downloading...\n' >&2
if wget $wgetflags "$target"; then
	if tar "$tarflags" "$file" --no-same-owner; then
		echo "Nightly update \"$file\" unpacked... Updating..." >&2
		rm -fr "$dir".old
		mv "$dir" "$dir".old
		mv "$tmpdir/firefox" "$dir"
		printf "$file\n$size\n" > "$lastvers"
		echo "Done updating Nightly to \"$file\"." >&2
		if [ -d "$dir.old/$policies_subdir" ]; then
			printf 'Copying $policies_subdir subdirectory... '
			(cd "$dir.old" && tar cSf "$policies_subdir" -) | (cd $dir && umask 0 && tar xSf -)
			echo Done.
		fi
	else
		rm -fr "$tmpdir/firefox"
		echo "Nightly update \"$file\" FAILED." >&2
	fi
	rm -fr "$tmpdir"
else
	rmdir "$tmpdir"
fi
if [ -f "$dir/$policies" ]; then
	:
else
	# v. https://github.com/mozilla/policy-templates/blob/master/README.md (q.v.)
	# Cf. https://bugzilla.mozilla.org/show_bug.cgi?id=1479149
	printf 'Creating $policies file... '
	mkdir -p "$dir/$policies_subdir"
	echo '{"policies": { "DisableAppUpdate": true }}' > "$dir/$policies"
	echo Done.
fi
